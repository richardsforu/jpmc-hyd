JAVA SE Notes
-------------------
Java SE - 12
JAVA SE 8
    1. Non GUI Part
    2. GUI Part 
        -> awt
        -> swings

Non GUI 
---------
1. OOPS
-> class
-> object
-> Encapulation
    -> public, default, private
    -> packages
    -> POJO classes
    -> Model/Bean/Entity
    -> Plain old java object
    -> Plain old Java interface 
-> Inheritance
-> Abstraction
    -> abstract classes
-> Poly morphism
    -> interfaces
---------------------
60%

2. java.lang package
-----------------------
-> java.lang.Object
-> String, StringBuffer
-> Wraper classes   
    -> Integer - int
    -> Double  - double
    -> Short
    -> Byte
    -> Float
    -> Double
    -> Character
    -> Boolean
-> Garbage Collection
    -> finalize
-> Exception Handling
        -> Checked
        -> Un Checked
-> Threads
        -> Single
        -> Multi Thread
        -> Thread Concurency
---------------
80%

3. Java API
    1. java.io
        -> File Operations
    2. java.util
        -> Collection API
        -> Data structores
----------------
100%


Naming Convensions
-------------------------
class
--------
-> Every class name in java
   should starts with upper
   case letter. If there are
   more than one word in the 
   class name, then each word
   first letter should be
   capitalized
Ex: Test, Employee,
    ContractEmployee
    DataInputStreamReader etc
2. methods/variables/objects
------------------------------
-> every method/variable/object
   in java should starts with 
   lower case letter. If there
   are more than one word in the
   name, then each word first
   letter should be capitalized
Ex: display(),printPaySlip(),
    empName, name, 

3. Const
--------
-> All cont in java shoud be in
   upper case letters only
Ex: PI, MAX_AGE, FONT_NAME etc
4. keywords/packages
----------------------
All keywords and package names
in java should be in lowercase
letters
Ex: java.lang, int, for, if,com


Class relationships
---------------------
1. Is 'A' 
2. Has 'A'

1. Is 'A'
------------
class A{

}
class B extends A{
// B is sub class of A
}

2. Has 'A'
-----------
class A{

}

class B{
 A a=new A();  
 // B has A's object

}





